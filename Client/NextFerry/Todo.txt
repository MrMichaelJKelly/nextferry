
What's next:
	Server features (can do any time):		
		Fix location for Pierce-west of narrows bridge.
		Automate tooling for retrieving schedule (low priority)	
		Improve the experience of fetching server logs to something repeatable.
		Cron job to check for errors and email me?

	Server feature (immediate):
		There are errors in the schedules we are sending.  Not clear how they got there.
			Problem: cannot debug the current storage format because of the 'minutes past midnight' business, 
			so cannot tell where the problem was inserted.
		V2 client does not read first two departures of schedules: fix by sending dummy departures in it's place.

	Fuck, fuck, fuck.  Two crashes --- once crashed the entire phone.  Not simply repeatable.  In both cases
	I was testing the phone's response to lack of network connectivity, and had just turned network connectivity
	back on.  

	** Known issue: race conditions with the "Downloading..." message.  The message can come up, and stay up, even
	when the there are schedules right there.   (Answer: "downloading" has to be shown and removed by the process
	that is actually *doing* it, synchronously for it.)

Postponed Indefinitely:
	
	We've got a performance problem: drawing the main display can take as much as 0.5 second.
		Investigation reveals this is an organic problem, simply linear in the number of times displayed.
		Most people will presumably have only a few routes displayed once they've customized their system
		Obvious solutions won't work for various reasons, so postponing indefinitely.

	Base wait times on ferry traffic density
	Wire cameras of terminals in to RoutePage
	
	** Known Issue: app does not respond to dynamic theme change.   If the user pages out of the app, changes theme
	colors and "back"s in to the app, the theme color is unchanged.   Disposition:  too bad.
	** Known Issue: if you navigate to a route page before schedules have been downloaded, the route page will
	be empty (as it should), but it will also stay empty even if you revisit it later.  However, exiting
	the app and re-entering it will fix the issue.  Disposition: highly unlikely sequence, easilty remedied:
	don't fix.


What's done:
	Get it into git.
	Added expiration times.
	Added details page.
	Removed main Panorama
	Fixed caching, again
	Centralized isWeekend (but haven't implemented holidays)
	Formatting times correctly on details page (details page is *working*)
	Create preferences page to select routes.
	Add a "reset" capability to reload schedules when you think they're messed up.
	Get it on the phone.
	Storing display settings in isolated storage.
	Correct 12/24 time formatting
	Settings accessible from route page
	Refactored time functionality; this now solves the end-of-day weirdness correctly.
	Major formatting of front page in place.  It scrolls and everything.   And the departure times "light up"
	App icon
	Added one more goodness state
	Major performance improvement for route page
	Added ability to set wait time.
	Added holidays
	Fixed threading again
	Split settings page into two, added About section
	Figure out how to package it, how to get it onto marketplace?

	Version 2.0
	Remove schedulefetcher and replace with call to our service.
	Update parser for format changes and add more robust error checking
	Add logic to overwrite our cache only when the read from the server is good.
	Add application and cache version numbers.
	Add exception handling (this was a *bug* in V1.0 --- had try/finally w/o catch!)

	Version 2.0 rev 2
	Switched to Google App Engine after being unable to do logging usefully.
	System is now working with deployed service http://nextferry.appspot.com/
	Improvements to visibility on main page
	Added first implementation of travel distance on server (client not yet using).
	Location awareness on the client is in!   
	Unfortunately the emulator doesn't seem to help us debug it, so we'll actually have to drive around and see...
	Added "no network" popup.
	Made vashon-* names direction specific
	Added upgrade capability (check what the last version of the app to run is).
	Added "easter egg" debug capability.
	Added help page.

	Create a public github repository, just for grins (maybe someone else will add features?)

	Version 2.x
	Solved duplicate message problem (we were creating multiple backgroundworkers)
	Moved server to "backend" server type, so MapQuest won't be time constrained.  Currently only I use it.

	Version 3.0 (client & server)
	Added an official test plan document
	Refactored Route.  In the future could download routes from server.
	Moved holiday logic to Server, and added generalized capability for "special" routes.
	Changed MainPage app menu to app bar buttons
	Changed client to address new "backend" server natively.
	Added Alerts feature


