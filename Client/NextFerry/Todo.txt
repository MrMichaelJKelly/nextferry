
What's next:
	
	We've got a performance problem: drawing the main display can take as much as 0.5 second.
		Investigation reveals this is an organic problem, simply linear in the number of times displayed.
		Obvious solutions won't work for various reasons, so postponing indefinitely.

	Postponing features to V3:
		Alerts
		Travel times accomodate wait times.
		
	Fix location for Pierce-west of narrows bridge.  (Server change)
	Automate tooling for retrieving schedule (low priority)	
	Add a "donate" button?	
	Consider making the alerts a paid feature?
	
	A few graphical changes are required: the "[All]" button is still invisible to most people.
	Need to increase the size.

	Improve the experience of fetching server logs to something repeatable.

	Standing issues:
	
I think we may only be providing timing hints with location, in spite of the suggestion that buffer time is meaningful w/o it.

We may want to do a dialog pop-up for no routes displayed on MainPage, given the reversal of the defaults.

We need to add "downloading schedules" popup for when there is no cache.

Bug: changing theme type from light to dark did not change background on routepage (though it did change the background on the top bar and app bar).


What's done:
	Get it into git.
	Added expiration times.
	Added details page.
	Removed main Panorama
	Fixed caching, again
	Centralized isWeekend (but haven't implemented holidays)
	Formatting times correctly on details page (details page is *working*)
	Create preferences page to select routes.
	Add a "reset" capability to reload schedules when you think they're messed up.
	Get it on the phone.
	Storing display settings in isolated storage.
	Correct 12/24 time formatting
	Settings accessible from route page
	Refactored time functionality; this now solves the end-of-day weirdness correctly.
	Major formatting of front page in place.  It scrolls and everything.   And the departure times "light up"
	App icon
	Added one more goodness state
	Major performance improvement for route page
	Added ability to set wait time.
	Added holidays
	Fixed threading again
	Split settings page into two, added About section
	Figure out how to package it, how to get it onto marketplace?

	Version 2.0
	Remove schedulefetcher and replace with call to our service.
	Update parser for format changes and add more robust error checking
	Add logic to overwrite our cache only when the read from the server is good.
	Add application and cache version numbers.
	Add exception handling (this was a *bug* in V1.0 --- had try/finally w/o catch!)

	Version 2.0 rev 2
	Switched to Google App Engine after being unable to do logging usefully.
	System is now working with deployed service http://nextferry.appspot.com/
	Improvements to visibility on main page
	Added first implementation of travel distance on server (client not yet using).
	Location awareness on the client is in!   
	Unfortunately the emulator doesn't seem to help us debug it, so we'll actually have to drive around and see...
	Added "no network" popup.
	Made vashon-* names direction specific
	Added upgrade capability (check what the last version of the app to run is).
	Added "easter egg" debug capability.
	Added help page.

	Create a public repository, just for grins (maybe someone else will add features?)

	Version 2.x
	Solved duplicate message problem (we were creating multiple backgroundworkers)
	Moved server to "backend" server type, so MapQuest won't be time constrained.  Currently only I use it.

	Version 3.0 (client & server)
	Added an official test plan document
	Refactored Route.  In the future could download routes from server.
	Moved holiday logic to Server, and added generalized capability for "special" routes.
	Changed MainPage app menu to app bar buttons
	Changed client to address new "backend" server natively.


