//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace NextFerry.NextFerryServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NextFerryServer.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetSchedules", ReplyAction="http://tempuri.org/IService1/GetSchedulesResponse")]
        System.IAsyncResult BeginGetSchedules(string clientversion, string lastdataversion, System.AsyncCallback callback, object asyncState);
        
        string EndGetSchedules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetDelays", ReplyAction="http://tempuri.org/IService1/GetDelaysResponse")]
        System.IAsyncResult BeginGetDelays(string clientversion, string location, System.AsyncCallback callback, object asyncState);
        
        string EndGetDelays(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetAlerts", ReplyAction="http://tempuri.org/IService1/GetAlertsResponse")]
        System.IAsyncResult BeginGetAlerts(string clientversion, System.AsyncCallback callback, object asyncState);
        
        string EndGetAlerts(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : NextFerry.NextFerryServer.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSchedulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSchedulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDelaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDelaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAlertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAlertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<NextFerry.NextFerryServer.IService1>, NextFerry.NextFerryServer.IService1 {
        
        private BeginOperationDelegate onBeginGetSchedulesDelegate;
        
        private EndOperationDelegate onEndGetSchedulesDelegate;
        
        private System.Threading.SendOrPostCallback onGetSchedulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDelaysDelegate;
        
        private EndOperationDelegate onEndGetDelaysDelegate;
        
        private System.Threading.SendOrPostCallback onGetDelaysCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAlertsDelegate;
        
        private EndOperationDelegate onEndGetAlertsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAlertsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetSchedulesCompletedEventArgs> GetSchedulesCompleted;
        
        public event System.EventHandler<GetDelaysCompletedEventArgs> GetDelaysCompleted;
        
        public event System.EventHandler<GetAlertsCompletedEventArgs> GetAlertsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NextFerry.NextFerryServer.IService1.BeginGetSchedules(string clientversion, string lastdataversion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSchedules(clientversion, lastdataversion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string NextFerry.NextFerryServer.IService1.EndGetSchedules(System.IAsyncResult result) {
            return base.Channel.EndGetSchedules(result);
        }
        
        private System.IAsyncResult OnBeginGetSchedules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientversion = ((string)(inValues[0]));
            string lastdataversion = ((string)(inValues[1]));
            return ((NextFerry.NextFerryServer.IService1)(this)).BeginGetSchedules(clientversion, lastdataversion, callback, asyncState);
        }
        
        private object[] OnEndGetSchedules(System.IAsyncResult result) {
            string retVal = ((NextFerry.NextFerryServer.IService1)(this)).EndGetSchedules(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSchedulesCompleted(object state) {
            if ((this.GetSchedulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSchedulesCompleted(this, new GetSchedulesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSchedulesAsync(string clientversion, string lastdataversion) {
            this.GetSchedulesAsync(clientversion, lastdataversion, null);
        }
        
        public void GetSchedulesAsync(string clientversion, string lastdataversion, object userState) {
            if ((this.onBeginGetSchedulesDelegate == null)) {
                this.onBeginGetSchedulesDelegate = new BeginOperationDelegate(this.OnBeginGetSchedules);
            }
            if ((this.onEndGetSchedulesDelegate == null)) {
                this.onEndGetSchedulesDelegate = new EndOperationDelegate(this.OnEndGetSchedules);
            }
            if ((this.onGetSchedulesCompletedDelegate == null)) {
                this.onGetSchedulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSchedulesCompleted);
            }
            base.InvokeAsync(this.onBeginGetSchedulesDelegate, new object[] {
                        clientversion,
                        lastdataversion}, this.onEndGetSchedulesDelegate, this.onGetSchedulesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NextFerry.NextFerryServer.IService1.BeginGetDelays(string clientversion, string location, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDelays(clientversion, location, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string NextFerry.NextFerryServer.IService1.EndGetDelays(System.IAsyncResult result) {
            return base.Channel.EndGetDelays(result);
        }
        
        private System.IAsyncResult OnBeginGetDelays(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientversion = ((string)(inValues[0]));
            string location = ((string)(inValues[1]));
            return ((NextFerry.NextFerryServer.IService1)(this)).BeginGetDelays(clientversion, location, callback, asyncState);
        }
        
        private object[] OnEndGetDelays(System.IAsyncResult result) {
            string retVal = ((NextFerry.NextFerryServer.IService1)(this)).EndGetDelays(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDelaysCompleted(object state) {
            if ((this.GetDelaysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDelaysCompleted(this, new GetDelaysCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDelaysAsync(string clientversion, string location) {
            this.GetDelaysAsync(clientversion, location, null);
        }
        
        public void GetDelaysAsync(string clientversion, string location, object userState) {
            if ((this.onBeginGetDelaysDelegate == null)) {
                this.onBeginGetDelaysDelegate = new BeginOperationDelegate(this.OnBeginGetDelays);
            }
            if ((this.onEndGetDelaysDelegate == null)) {
                this.onEndGetDelaysDelegate = new EndOperationDelegate(this.OnEndGetDelays);
            }
            if ((this.onGetDelaysCompletedDelegate == null)) {
                this.onGetDelaysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDelaysCompleted);
            }
            base.InvokeAsync(this.onBeginGetDelaysDelegate, new object[] {
                        clientversion,
                        location}, this.onEndGetDelaysDelegate, this.onGetDelaysCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult NextFerry.NextFerryServer.IService1.BeginGetAlerts(string clientversion, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAlerts(clientversion, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string NextFerry.NextFerryServer.IService1.EndGetAlerts(System.IAsyncResult result) {
            return base.Channel.EndGetAlerts(result);
        }
        
        private System.IAsyncResult OnBeginGetAlerts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientversion = ((string)(inValues[0]));
            return ((NextFerry.NextFerryServer.IService1)(this)).BeginGetAlerts(clientversion, callback, asyncState);
        }
        
        private object[] OnEndGetAlerts(System.IAsyncResult result) {
            string retVal = ((NextFerry.NextFerryServer.IService1)(this)).EndGetAlerts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAlertsCompleted(object state) {
            if ((this.GetAlertsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAlertsCompleted(this, new GetAlertsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAlertsAsync(string clientversion) {
            this.GetAlertsAsync(clientversion, null);
        }
        
        public void GetAlertsAsync(string clientversion, object userState) {
            if ((this.onBeginGetAlertsDelegate == null)) {
                this.onBeginGetAlertsDelegate = new BeginOperationDelegate(this.OnBeginGetAlerts);
            }
            if ((this.onEndGetAlertsDelegate == null)) {
                this.onEndGetAlertsDelegate = new EndOperationDelegate(this.OnEndGetAlerts);
            }
            if ((this.onGetAlertsCompletedDelegate == null)) {
                this.onGetAlertsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAlertsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAlertsDelegate, new object[] {
                        clientversion}, this.onEndGetAlertsDelegate, this.onGetAlertsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override NextFerry.NextFerryServer.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<NextFerry.NextFerryServer.IService1>, NextFerry.NextFerryServer.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<NextFerry.NextFerryServer.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSchedules(string clientversion, string lastdataversion, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientversion;
                _args[1] = lastdataversion;
                System.IAsyncResult _result = base.BeginInvoke("GetSchedules", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetSchedules(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetSchedules", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDelays(string clientversion, string location, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientversion;
                _args[1] = location;
                System.IAsyncResult _result = base.BeginInvoke("GetDelays", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetDelays(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetDelays", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAlerts(string clientversion, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = clientversion;
                System.IAsyncResult _result = base.BeginInvoke("GetAlerts", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetAlerts(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetAlerts", _args, result)));
                return _result;
            }
        }
    }
}
